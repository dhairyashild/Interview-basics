http://url:8080/github-webhook/

jenkins cicd seuriry?
MASTER SECURITY
RBAC
SG
sonarqube
aws iam
Secrets Manager

NODE SECURITY==
DIVIDE EC2 IN SUBNETS 
pin pipelines to specific labels 
RBAC=Only grant Configure permissions on nodes to admins 
SG

# ERROR ==
Finding errors in pipelines:
Jenkins dashboards(job status) and alert integrations.
pipeline logsfor error messages; 

1. Long Build Time--Use parallel stages
2.. Jenkins Slaves --Check SSH keys, firewall-22, ,Jenkins master logs
3. Missing credentials or wrong ID ==="Manage Jenkins → Credentials", 
pass correct ID
4. Plugin Issues (Missing, Conflicts, Errors) 
Check “Updates”--Update/downgrade plugin

5. Environment Variable Not Recognized --
syntax
Access using ${VAR_NAME} or env.VAR_NAME 

7. Jenkins Workspace Full
cleanup

8.  Pipeline Stuck at Certain Stage --Check if stage has input block
9.  Email Notifications Not Working -- check smtp setting



Artifacts:Produced files from build pipelines =JARs, Docker images

SATS and DATS: System Acceptance Tests validate overall requirements; Data Acceptance Tests (DATS) verify data integrity and formats.

TROTTLE BUILD— minimum time for next builds

Execute concurrent builds if necessary
               same job build multiple times (max executors set kelat tevde salag build suru hotat)


PROJECT—-ENV—-STAGE
4vid-build quque and build executors status -- show job running or not 

cat /etc/passwd   ------jenkins user we get , this made automatic from jenkins installation

PIPE-NAME 11    =======he uper-right chya search box made taka -- direct tya n0. chya job var jato

System Message==This mesesage will be displayed at the top of the Jenkins main page. This can be useful for posting notifications to your users

# of executors== no of job that can simultanaously run

plugin configuration  == in CONFUGURE SYSTEM

TOOL SATHI == GLOBAL TOOL CONF=== PLUGIN.JENKINS.IO..... HYA WEBSITE VAR PLUGIN MILATAT

SECURITY—-CREATE USER & THEN
MNG ROLES—
CRED == CREDENTIAL VAR PERMISION
AGENT == NODE VAR ACCESS
JOB=  SAME
RUN= SAME



BUILD TRIGGER

1) B T remotely—-
-Build Authorization Token Root (BATR plugin  )
-add token in build trigger section
-plugin.jenkins.io——here serch above plugin—on that plugin we get URL in which u change JOBNAME & TOKEN NAME
-curl url ——can be used in shell script or via command to run remotely

2) Build periodically== H/15 * * * * =every 15 min

3) poll SCM== H/15 * * * *
                 same as above but it checks gitfor given time but triggers only if code is changed on git.

4) git hook trigger== webhook

5) B Affter other project build— give old pipeline name here so after that this job will run.


#ENV VARS
MNG JENKINS — SYSTEM — GLOBAL VARIABLE —ENV —-
YACHYAT  ALL JOBS LA LAGNARE VARS DETA YETAT 
(SYSTEM -- env var + plugin sathi)

PARAMETERE===
-USED ADD ENV VAR
-USE TO GIVE RUN TIME VALUE BY USER
-ABOVE STRING PARAMETER GIVEN
-THEN BOOLEAN PARA WHERE
 DEFAULT VALUE =TICK KELI =TRUE
DEFAULT VALUE =TICK NAHI=FALSE GHETO

1 STRING  eg. ${       }   this can beuse to fetch value in job like in terra
2  BOOLEAN eg—above image TICK==True, UNTICK=False
3 CHOICE
4 PASSWORD PARA
5 MULTILINE STRING
6 FILE PARA—ssh+kubeconfig  uses


TIMEOUT—
BUILD ENV  —ABORT BUILD IF 
Jenkins मध्ये timeout म्हणजे कामाची वेळ मर्यादित करणे, ज्यामुळे जर एखादे काम निश्चित वेळेत पूर्ण झाले नाही तर ते थांबवले जाते.

BUILD ENV==ADD TIMESTAMP —टाइमस्टॅम्प म्हणजे विशिष्ट वेळ  दर्शवणारा डेटा.

pipelinename—-general—-Execute concurrent builds if necessary==
               same job che anek build start hotat (max executors set kelat tevde salag build suru hotat)

pipelinename—-general—-retry count—3 ==
           जर Git कोड पुल करताना त्रुटी आली, तर "retry" मध्ये दिलेल्या वेळेनुसार पुन्हा प्रयत्न करता.
eg. git url wrong , jenkins not connect to git  then it will try  3 times to connect git  if 3 given in retry count. then give error in logs

pipelinename—-general—-TROTTLE BUILD—
         TIME / NO. OF BUILD == TIME AFTER WHICH NEXT BUILD CAN START
          Eg. img made 1 minute divided by 3 == 20 sec so if 1st build start now then after every 20 sec  u can go for 2nd build


single command —-
  sh ' date'

multiple commands—-
sh '''
date
pwd
whoami
'''


gaurav gyan 42 vid
         jar file kontya build che ahe tyala tya build cha number dya mhanje ky error ala tar kalel.




parameters {
string (                     name: 'person',    defaultValue: 'Saurav Sharma',    description: "Who are you?")

booleanParam(    name: 'isMale',     defaultValue: true,                            description: "hi")

choice(                     name: 'City',          choices: ['Jaipur', 'Pune'],                description: "hi")
}


##paraname (name: '             ' ,  defaultValue/choices:                   , description:'           ')




input{
message  "                  "      #message  "   HA PROMPT AS QUESTION DISATO     "   
ok "                "                     ok "   ITHE LIHALELE +  ABORT — U CAN SELECT     "
}



post{
always{}
success{}
failure{}
}


master-slave agent setup
master var jenkins taka
slave var java , mvn ...taka
shh-keygen kara  —- kontyahi node var
pvt key jenkins-console var taka
public key slavechya authorised_keys mde taka


Number of executors—-2
              maximum number of concurrent builds that Jenkins may perform on this node

Remote root directory—- /home/ubuntu/opt/jenkins
               - folder on slave node, 
               -give that folder chmod755 /opt/jenkins


LABELS—-
                - Labels (or tags) are used to group multiple agents into one logical group.eg=O.S(linux/window) , CPU(large/medium/small)

java available==
alternavives —config java

# slave add"--
java install
remote directory must created before

## upstream and downstream jobs in jenkins

- Upstream Job (1st job): A job that triggers another job.
- Downstream Job (2nd job): A job that is triggered by another job.
 steps {
              build 'pipeline2-name'              #########     build '   ' --this is upstram pipe and name in here' ' = downstream job
            }



stage('catch error stage '){
            steps{
                catchError(message: 'stage failed') {
                    sh 'hello'
    }
            }
        }


failure {
            emailext(
                subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' - Failed",
                body: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' has failed. Check the details at: ${env.BUILD_URL}",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'bhushandesai84@gmail.com,dhairyashild300@gmail.com'
            )
        }


retry count ,3.14 3 times he tried after he gives fail error
steps {
        retry(count: 3) {
            sh 'deploy-script.sh'
        }


23
1.20 timeout , 
agent any
    options {
        timeout(time: 30, unit: 'MINUTES')  // Aborts the whole pipeline after 30 minutes
    }
    stages 

24 
timestamp 1.24 
 options {
        timestamps()
    }

if else in scripting language
stage('Example') {
            steps {
                script {
                    if (env.BRANCH_NAME == 'main') {
                        echo 'Hello from main branch'
                    } else {
                        echo "Hello from ${env.BRANCH_NAME} branch!"
                    }


definitions
-  What is Jenkins?
Open-source automation tool for CICD
- Benefits?
Early bug detection,
 automatic build reports,
 LDAP integration.

-  Maven?
Build tool 

-  Stage 
A logical division within a pipeline, representing a major phase 

-  Step
An individual task within a stage, 

-  upstream job -->  triggers another job (downstream) as part of a build chain,

-  multibranch--> A Jenkins project type that automatically creates and manages pipelines for each branch
-  post--> A section in a Jenkins Pipeline that defines actions to be performed after the main pipeline stages, such as always, success, or failure.
-  input message -->  A step in a Jenkins Pipeline that pauses execution and prompts users for input or approval before proceeding.

-  Executor =  resource on node that runs  single build at a time

-  Agent
A machine or container that connects to the Jenkins controller and executes tasks as directed.

-  Controller (formerly Master)
 coordinates builds and manages agents

-  workspace
Directory on a node where Jenkins performs builds and stores files

-  Declarative Pipeline
simpler, structured syntax for defining pipeline

-  Scripted Pipeline
 defining pipelines using Groovy

-  Trigger
 EVENT or action that starts a build or pipeline
-  Plugin-->  ADDON that adds  functionality 
-  Node Label --> TAG assigned to nodes to control where jobs run
-  Continuous Integration (CI) --> The practice of automatically integrating code changes and running tests.
-  Continuous Delivery (CD)--> The process of automatically preparing code for deployment, requiring manual approval before production.
-  Continuous Deployment -->The process of automatically deploying every validated change to production without manual intervention

- Groovy? --> Jenkins scripting language.

-  Parameters?
Inputs to customize builds.

-  What are the types of Jenkins Pipelines?
FREESTYLE, Pipeline, and Multibranch Pipeline

-  What is a node block in Jenkins Pipeline?
A node block specifies on which agent  pipeline or stage will run.

-  What is the role of the post section in a declarative pipeline?
The post ssection defines actions to run after the pipeline or stage completes, such as notifications

-  shared libraries
reusable scripts that can be used across multiple Jenkins pipelines.


build after other projects are built  , other project will start to build 
 stage('Trigger Downstream') {
      steps {
        build job: 'downstream-job-name'
      }

jenkins Pipeline you can give a timeout option for a specific stage
1.20 timeout , 
agent any
    options {
        timeout(time: 30, unit: 'MINUTES')  // Aborts the whole pipeline after 30 minutes
    }



execute concurrent build if necessary , means build parallel jobs depending on no. of executors
stage('parallel tasks'){
    parallel{
    stage('stage1'){steps{echo"1st parallel jobs"}}
    stage('stage2'){steps{echo"1st parallel jobs"}}
    }} depending upon number of executors


retry count ,3.14 3 times he tried after he gives fail error
steps {
        retry(count: 3) {
            sh 'deploy-script.sh'
        }


use custom workspace
1.29 workspace path ——> /var/lib/jenkins/workspace/<job-name> —-> jenkins make seperate workspace for eaach job


mailor plugin first


failure {
            emailext(
                subject: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' - Failed",
                body: "Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' has failed. Check the details at: ${env.BUILD_URL}",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'bhushandesai84@gmail.com,dhairyashild300@gmail.com'
            )
        }


how to deploy blue green 
rollback is easy & 0 downtime 
57:16 added jenkins parameter paremeter{choice{name:'deploy_env', choices:['blue','green'],description:''}}
1.06:06 if params.DEPLOY_ENV==BLUE—> DEPLOYMENT FILE = BLUE-DEPLOYMENT-FILE.YAML



upload s3 backup of jenkins===== https://www.youtube.com/watch?v=9bjNxaQH89Y&t=641s
install aws-cli 
3.31 s3 publisher plugin
4.30 amazon s3 profiles :—> give credentials —> profile name —> access key —> secret key —> 
5.10 createe user group in aws named s3G —> select s3 amazon fullaccess 
su - jenkins 
zip -r jenkinsBackup .zip jenkins



sakshi daily activities of devops in jenkins 
1)  check daily failed build or not?
2)  build taking longer time why?
3)  maintenance/script issue 
4)  jenkins agent perfroming correctly or not?
5)  creds rotated & backups / plugins ok? , 
6)  collaborate with developer
7)  logs ok 


-  What is a node block in Jenkins Pipeline?
A node block specifies on which agent  pipeline or stage will ru


-  update the values and helm install 
-  helm upgrade <release-name> . <chart-name> -f values.yaml
-  Verify the Updated Values —-> helm get values <release-name> -o yaml
                                        helm upgrade my-app ./my-chart --set replicaCount=5


sakshi daily activities
1)  cluster maintenance , pod maintenance 
2)  update 
3)  helm charts working fine 
4)  any isssue then rollbacks are working fine
5)  terraform script to create k8s cluster improve 
6)  volume & logging happened properly 
7) lgging happened carefully 
8) collaborate with developers & if issue in app code

helm upgrade <release-name> <chart-name> --set config.config1=newvalue

##############################################   EXTRA NOTES FOR GPT & OTHER     ################################################


Q---Automatically Update Jenkins Location URL 
1) After EC2 Reboot (Dynamic Public IP Support)--THERE SI SCRIPT U MUST RUN TO AUTO UPDATE NEW IP BUT USE BELOW METHOD NOT THIS 
2) best solution is use elastic ip for jenkins


####################################SLAVE NODE SET UP
SLAVE NODE SET UP

1)  CREATE master jenkins is in prod and jenkins agent is in 4 clusters (dev,stage, preprod , prod ) 
  - connect master with slave by ip ,  so we should do vpc peering or transit gateway ,
   each cluster will have diffrent aws creds and kubeconfig

2)   jenkins agent will have assume role ,docker aws cli and helm installed 

-  master is in prod environment cluster , 4 cluster is in 4 diff account  
-  rather than using parameter multibranch pipeline is better --> Account and cluster isolation,
   Security separation --> limited accidental deloyments 




Prerequisites on Jenkins slave node to run those commands, numbered for clarity.

Java Runtime Environment (JRE): Required to run the Jenkins agent itself.
Terraform CLI: The binary must be installed and available on the system PATH.
AWS CLI Version 2: Essential for executing any aws commands and for IAM-based authentication.
kubectl: The Kubernetes command-line tool, configured with the correct context for your EKS cluster (configuration can be dynamic within the pipeline).
Helm CLI: The package manager for Kubernetes, required to run helm commands.
Docker Engine: Required to build, pull, and push container images. The Jenkins user must have permission to run Docker commands.
Maven: Must be installed and configured on the PATH for building Java applications.
SonarScanner CLI: Required to perform code analysis and send results to the SonarQube server. (Often used as a Maven plugin, but the CLI is more flexible).
JFrog CLI (Optional but Recommended): Simplifies interaction with Artifactory for uploading build artifacts, resolving dependencies, and managing Docker registries.

####################################

111 jenkins agent error solutins? ==Agent disconnected  / Authentication failed
-Agent disconnected —firewall blocking port (master 8080 & slave 22)      +     Relaunch agent
- Authentication failed — Wrong or missing credentials
-Mark this node temporarily offline and again relaunch
- agetns logs -- gives ConnectionRefusedException + OutOfMemoryError + ....

REMEMBER SARANSH --- LOGS  + RELANUCH AGENT + PORT 22 + JAVA INSTALLED + RAM(OOM)
####################################
101. troubleshoot Jenkins “Out of Memory” errors? 
Answer: 
Increase JVM heap size (-Xmx), 
clean old builds, 
archive artifacts to external storage

#################################### 
REMEMBER ===POST { failure{ emailext(subject + body +  recipientProviders: + to  )}+ success+    always{cleanWs()}


  post {
        always {
            cleanWs() // Clean workspace
            // Archive important logs
            archiveArtifacts artifacts: '**/target/*.log, **/terraform/*.log', allowEmptyArchive: true
        }
        success {
            // Success Notification
            emailext (
                subject: "SUCCESS: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: """Build and Deployment to PROD was successful.
                Image: ${ECR_REPO_URI}:${IMAGE_TAG}
                Build URL: ${env.BUILD_URL}""",
                to: 'devops-team@yourcompany.com'
            )
        }
        failure {
            // Failure Notification
            emailext (
                subject: "FAILED: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
                body: """Build or Deployment failed. Please investigate.
                Build URL: ${env.BUILD_URL}console""",
                to: 'bhushandesai84@gmail.com,dhairyashild300@gmail.com,devops-alerts@yourcompany.com'
            )
        }
    }


https://plugins.jenkins.io/email-ext/

####################################


####################################




####################################




####################################




####################################
...
.




####################################





####################################




####################################
