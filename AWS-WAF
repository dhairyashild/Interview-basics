#AWS WAF PROTECTS                  (MURALI NOTES)
1- ALB ONLY NOT NLB
2- CLOUDFRONT
3- API

Web ACL: Costs $5.00 per month, prorated hourly.
Rule: Costs $1.00 per month, prorated hourly.
Request: Costs $0.60 per 1 million requests

IN FREE ALSO FOR BOT CONTROL 5000 REQUESTS ARE FREE






BLOCK rule: Instantly blocks specific IPs permanently from ALL access
RATE LIMIT rule: Temporarily blocks IPs only after they exceed request limits on SPECIFIC paths for given time (5min) then automatically get access again



#################################                             RAHUL WAGH SHORT NOTES + EXTENDED GPT NOTES FOR BLOCK + ALLOW/BLOCK PARTICULAR IP NOTES                  #############################
REMEMBER---------
# BLOCK PARTICULAR IP SET + GIVE PARTICULAR IP SET ACCESS TO UR WEBSITE(WHITE-LISTING)
STEPS
WAF---CREATE IP_SET RANGE
WAF--WACL---ADD MY OWN RULE---ROLETYPE=IP_SET---
------------SET rule----review rule ---save
---------------------------------------------------------
# BLOCK PARTICULAR IP SET
# STEPS:

# 1. Create IP Set
WAF → IP sets → Create IP set
Name: block-malicious-ips
Type: IPV4
Addresses: 192.0.2.0/24, 203.0.113.0/24

# 2. Create Web ACL Rule
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add my own rules
Rule type: IP set
Name: block-malicious-ips-rule
IP set: block-malicious-ips
Action: Block

# 3. Save Rule
Review → Add rule → Save
------------------------------------------------------------
# WHITELIST PARTICULAR IP SET (ALLOW ACCESS)
# STEPS:

# 1. Create IP Set  
WAF → IP sets → Create IP set
Name: allow-trusted-ips
Type: IPV4
Addresses: 10.0.0.0/8, 172.16.0.0/12

# 2. Create Web ACL Rule
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add my own rules
Rule type: IP set
Name: allow-trusted-ips-rule
IP set: allow-trusted-ips
Action: Allow

# 3. Set Higher Priority than Block Rules
Priority: 1 (Top priority - processes first)

# 4. Save Rule
Review → Add rule → Save
####################################################################################################################################################
####################################### RATE LIMITING JUST READ 1 ST EXAMPLE AS ALL 3 SAME WORK===# 1. RATE LIMIT FOR LOGIN ENDPOINTS (Prevent brute force) ##################################


# RATE LIMITING: Blocks 1 user IP accessing specific URL paths exceeding limit in given time, returns 403 error

# 1. RATE LIMIT FOR LOGIN ENDPOINTS (Prevent brute force)
# Blocks: 100 requests/5min PER IP address
# Protects: Authentication endpoints from brute force attacks
# Sample URLs blocked:
# - https://yourapp.com/login
# - https://yourapp.com/api/auth/signin
# Effect: Single user IP gets 403 after 100 login attempts in 5 minutes

# 2. RATE LIMIT FOR API ENDPOINTS (Protect APIs)  
# Blocks: 500 requests/5min PER IP address
# Protects: All API endpoints from abuse/DoS
# Sample URLs blocked:
# - https://yourapp.com/api/users/*
# - https://yourapp.com/api/orders/*
# Effect: Single user IP gets 403 after 500 API calls in 5 minutes

# 3. RATE LIMIT FOR ACTUATOR ENDPOINTS (Spring Boot protection)
# Blocks: 50 requests/5min PER IP address
# Protects: Spring Boot monitoring endpoints
# Sample URLs blocked:
# - https://yourapp.com/actuator/health
# - https://yourapp.com/actuator/metrics  
# Effect: Single user IP gets 403 after 50 actuator calls in 5 minutes

# ALL RULES: Per-IP basis, not global limit
# YOU DECIDE: Adjust limits based on your customer traffic patterns

==========
# If user at IP 192.168.1.100 makes:
# - 101 login attempts in 5 minutes → 403 error on login
# - 501 API calls in 5 minutes → 403 error on APIs  
# - 51 actuator calls in 5 minutes → 403 error on actuator
# All other users continue normal access

####################################################################################################################################################

# DDoS PROTECTION WITH AWS WAF
# WHAT: Blocks Distributed Denial of Service attacks that flood your application

# STEPS:

# 1. ENABLE ANTI-DDoS MANAGED RULE (PAID)
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add managed rule groups
Rule group: AntiDDoS Protection for Layer 7 attacks
Cost: $20/month + usage fees
Capacity: 50 WCU
Action: Block

# 2. ADD AWS MANAGED RULE GROUPS FOR BASELINE PROTECTION
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add managed rule groups
Rule group: AWSManagedRulesCommonRuleSet (Free)
Rule group: AWSManagedRulesAmazonIpReputationList (Free) 
Rule group: AWSManagedRulesAnonymousIpList (Free)
Action: Block

# 3. ADD FREE RATE-BASED RULE (CUSTOM)
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add my own rules
Rule type: Rate-based rule
Name: ddos-rate-limit
Rate limit: 2000
Action: Block

# 4. SET PRIORITY
Priority: After IP whitelist rules

# 5. Save Rules
Review → Add rules → Save

# PROTECTION LAYERS:
# - AntiDDoS Rule: Advanced Layer 7 attack detection
# - AWS Managed Rules: Baseline security (SQLi, XSS, bad IPs)
# - Rate-based Rule: Basic request flooding protection
####################################################################################################################################################

# GEO-BLOCKING IN AWS WAF
# WHAT: Blocks/Allows traffic based on country/region

# STEPS:

# 1. CREATE GEO-MATCH RULE
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add my own rules
Rule type: Geo match rule
Name: block-countries
Region: Country codes (CN, RU, KR, etc.)
Action: Block

# 2. SET PRIORITY (High for blocking)
Priority: After whitelist, before other rules

# 3. Save Rules
Review → Add rule → Save

# SENIOR DEVOPS MUST KNOW:
# - Legal compliance (GDPR, data sovereignty)
# - Business impact (blocking legitimate users)
# - CDN edge locations may affect geo-detection
# - Use allow lists instead of block lists when possible
# - Monitor for false positives in logs
# - Combine with other rules for layered security

# EXAMPLE:
# Block: China, Russia, North Korea
# Allow: Only US, Canada, India (for compliance)

####################################################################################################################################################
# SQL INJECTION PROTECTION IN AWS WAF
# STEPS:

# 1. ADD FREE RULE GROUPS
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add managed rule groups
→ Free rule groups
→ Select: Core rule set (700 WCU)
→ Action: Block

WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add managed rule groups  
→ Free rule groups
→ Select: SQL database (200 WCU)
→ Action: Block

# 2. ADD PAID RULE GROUPS (OPTIONAL)
WAF → Web ACLs → Your Web ACL → Rules → Add rules → Add managed rule groups
→ AWS managed rule groups
→ Select: F5, Imperva, or Fortinet (Paid)
→ Action: Block

# 3. SET PRIORITY
Priority: Free rules first, then paid rules

# 4. Save Rules
Review → Add rules → Save

# WCU INFO: Core (700) + SQL (200) = 900/1500 used
# Max Web ACL capacity: 1500 WCU - Plan your rules accordingly
####################################################################################################################################################



####################################################################################################################################################



####################################################################################################################################################


####################################################################################################################################################




####################################################################################################################################################



####################################################################################################################################################



####################################################################################################################################################


####################################################################################################################################################



####################################################################################################################################################




####################################################################################################################################################



####################################################################################################################################################
