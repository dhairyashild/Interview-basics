##########################        SARANSH         ###########################
<< disclaimer
disclaimer

${var} use instaed of $var ,{} help to concat any word  ,myvar must be at left and it value on right ,no space on either side of =          (VAR NOTES)
15 unset name        /name=      BOTH USED TO UNSET VAR ,  radonly varname    THIS FIX VALUE OF VAR PERMENENT

read -p "    " -s password                               (INPUT NOTES)
command line args        ${0}=script.sh    ${1} =1st arg 

14-ASSIGN COMAND O/P AS- variable1=$(  )       echo"${  }"         --declare by round bracket and call by curly like how we call any other var

16
echo "${string^}"  /  echo "${string,}"  # Output upper 1st word: my / My   
echo "${string^^}" /  echo "${string,,}" # # Output full: MY NAME IS GAURAV / my name is gaurav

17 GIVE DEFAULT VALUE TO VAR  === name=${name:-World}              VAR1=${VARNAME:-VAR-DEFAULT-VALUE}

18 ARITHMETIC SYNTAX     "$((a+b))"

21 function function-nav(){
command in fuction
}
function-nav

25 SUCCESS/FAILED
echo $? 
0    / 127    / 1        #PREVIOUS COMMAND SUCCESS=0 OR FAILED=127 OR NOT GET WORD IN FILE=1

26
if COMMAND                 #THIS COMMAND SUCCESS & GIVE 0 AS O/P
then                       # THEN ONLY RUN BELOW COMMANDS
Command 1
command 2 
fi

27  if[] then     elif[] then      else fi
number=5
if [ $number -eq 5 ]         # [ SPACE NEED IN SQUARE BRACKET BEFORE AND AFTER CONDITION SPACE  ]
then
echo "number is eq 5"
elif [ $number -gt 5 ]       # -eq/-ne=equal/not, -gt/lt=greater-than/less , -ge/-le=greater than or equal to / less&equal
then
echo "wrong"
else                          # If neither of the above conditions are true
    echo "The number is greater than 5."
fi


---------------------------------------------------------------------------------------------------
# VARIABLE

1- var="program"                  ## no space on either side of =
   VAR="hi"                       ## var & VAR have different

2- $var and ${var}     both are correct to call var value but use ${var} because u can add(cocat) any value to it 
var="program"
echo${var}-ing                     ## 
programing

3- system var  
env                                ## this command show all system var in linux
-----------------------------------------------------------------------------------
# INPUT

read 
read -p " message as prompt"  varname

#!/bin/bash
read name
read -p "give password " -s password            # -s do not show password while u type it on prompt
echo "my name ${name}"
echo "my pass ${password} "
--------------------------------------------------------------------------------

COMMAND LINE ARGS GIVING  =

#!/bin/bash
name=${3}

echo ${0}
echo ${1}
echo ${2}
echo "${name}"
=================
./script.sh hi bi  shy                     =========== 
0           1   2  3
script.sh 
hi 
bi
shy
--------
#!/
echo $1 
.....
echo $11
echo "$11"
.scipt.sh 1 2 .... 10 51 52 53
  0       1 2         11 12 13
========o/p
11      #for $11    == because $11 it considers $11=$1concat1            #########
51      #for ${11}   == so use {} for variable calling                   #########
      
-----------------------------------------------------------------------------------
14 ASSIGN COMAND O/P AS VAR

#!/bin/bash
command=$(date +%D-%T)
echo "${command}"

./script.sh ==========
/home/ubuntu
25/6/2025 10:23:16
----------------------------------------
15 UNSET VAR

name="ram"
readonly name                
name="sham"
unet name
----------------------------------
16
string="my name is Gaurav"

# Capitalize the first letter                                   # Lowercase the first letter
echo "${string^}"  # Output: My name is Gaurav                  echo "${string,}"  # Output: my name is Gaurav

# Capitalize all letters                                        # Lowercase all letters
echo "${string^^}" # Output: MY NAME IS GAURAV                  echo "${string,,}" # Output: my name is gaura

# Get the length of the string
echo "length of string variable is ${#string}" # Output: length of string variable is 17
-----------------------------
echo "$((a+b))"
echo "$((a-b))"
echo "$((a*b))
echo \$ ((a / b)) ^ 2 \#5/6
echo "$((a%b))"
echo s ((2 ^ 3)) ^ prime prime \#2^ * 2^ * 2
((a++))\# a = a + 1
echo $a

--------------------------------
21=FUNCTION ==
- 1 st declare variable then give function as best practice to write shell
- 
function configuration(){
#configurations code
echo "configcodel"
echo "configcode2"
function2-nav                # # THIS IS THE SECOND FUNCTION, WHICH WILL BE CALLED BY THE FIRST ONE.

}
configuration       #THIS CALLS FUNCTION
----------------------------
25 - command sucess / fail

ls 
echo $? 
0 

sadasdasdas
adasdasdas: command not found 
echo $? 
127
---------------------------------------------





































































